# OpenAirInterface experimental testbed setup: simulation scenarios
#
# Includes the simulation scenarios for
# [1] L. Wischhof, F. Schaipp, S. Schubaeck, G. Koester,
#     Simulation~vs.~Testbed: Small Scale Experimental Validation of an Open-Source LTE-A Model,
#     Published in: 2020 IEEE 31st Annual International Symposium on Personal, Indoor and Mobile Radio Communications,
#     DOI: 10.1109/PIMRC48278.2020.9217163, available at IEEE Xplore https://ieeexplore.ieee.org/document/9217163
#
# For a detailed description of the scenarios, refer to the publication mentioned above.

[General]
network = crownet.simulations.networks.LabSingleCell
image-path=../../images
#tkenv-plugin-path = ../../../inet/etc/plugins
#record-eventlog = true
#tkenv-default-config =
output-scalar-file-append = false
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=300s
warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 3
seed-set = ${repetition}

#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

#============= AMC module parameters ================
# (number of RBs is not included here because it is scenario specific)
**.ueTxPower = 20
**.eNodeBTxPower = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz

#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel.shadowing = false   # enable/disable shadowing
**.channelModel.scenario = "INDOOR_HOTSPOT"  # pathloss scenario from ITU: INDOOR_HOTSPOT, URBAN_MICROCELL, URBAN_MACROCELL, RURAL_MACROCELL, SUBURBAN_MACROCELL
**.channelModel.nodeb_height = 1.5
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.dynamic_los = false   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = true      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)

**.configurator.config = xmldoc("./demo.xml") # configuration of IPv4 addresses used in the network

#============= Statistics ===========================
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}

**.routingRecorder.enabled = false


# *.numUe = ${numUEs=2}

# connect each UE to the eNB
**.ue[*].macCellId = 1
**.ue[*].masterId = 1

#============= Positioning and mobility ============
*.eNB[*].mobility.initFromDisplayString = true
# *.eNB[*].mobility.initialX = 0.5m
# *.eNB[*].mobility.initialY = 1m
# set constrains for area according to size of
# shielded lab R1.009a
*.ue[*].mobility.typename = "LinearMobility"
*.ue[*].mobility.constraintAreaMaxX = 7.5m
*.ue[*].mobility.constraintAreaMaxY = 10m
*.ue[*].mobility.constraintAreaMinX = 0m
*.ue[*].mobility.constraintAreaMinY = 0m
*.ue[*].mobility.initFromDisplayString = false
*.ue[0].mobility.initialX = 5m
*.ue[0].mobility.initialY = 2.5m
*.ue[1..].mobility.initialX = 5m
*.ue[1..].mobility.initialY = 2.5m + ancestorIndex(1)*3.0m
*.ue[*].mobility.speed = 0mps
#------------------------------------#

# record relevant statistics
**.alert*.vector-recording = true
# all other vectors are disabled
**.vector-recording = false


################################################  Downlink Scenarios ####################################################

## base configurations with unadapted parameters

[Config regularModel]
**.numRbDl = 50
**.numRbUl = 50
**.numBands = 50

[Config regularModel25]
**.numRbDl = 25
**.numRbUl = 25
**.numBands = 25

## base configurations with adapted model parameters

[Config adaptedModel]
**.numRbDl = 50
**.numRbUl = 50
**.numBands = 50
**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
**.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
**.eNB[*].cellularNic.processingDelayOut = 1134us
**.ue[*].cellularNic.processingDelayIn = 5518us
**.ue[*].cellularNic.processingDelayOut = 1134us

[Config adaptedModel25]
**.numRbDl = 25
**.numRbUl = 25
**.numBands = 25
**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
**.eNB[*].cellularNic.processingDelayIn = 860us     # additional processing delays (for 25 RBs lower due to lower load?)
**.eNB[*].cellularNic.processingDelayOut = 860us
**.ue[*].cellularNic.processingDelayIn = 5518us
**.ue[*].cellularNic.processingDelayOut = 860us


##################################################
# S1-base: low-rate data traffic - base scenario #
##################################################
[Config S1-base]
*.numUe = ${numUEs=1}

*.ue[*].numApps = 1
*.ue[*].app[0].typename = "AlertReceiver"

*.server.numApps = ${numUEs} # applications on server should be equal to (numUEs)*(ue[*].numUdpApps)
*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of apps
*.server.app[*].localPort = 3088+ancestorIndex(0)
*.server.app[*].typename = "AlertSender"
*.server.app[*].multicastInterface = ""  # server runs on a standard host - no need to set mulicastInterface manually
*.server.app[*].packetSize = 300
*.server.app[*].period = truncnormal(0.1s, 1ms)
*.server.app[*].startTime = uniform(0s,0.02s)
*.server.app[*].stopTime = 300.0s

##################################################
# S1: low-rate data traffic (50 RBs)             #
##################################################
[Config S1]
extends=S1-base, adaptedModel
# no other parameters need to be set

##################################################
# S1.UA: low-rate data traffic, unadapted model  #
##################################################
[Config S1-UA]
extends=S1-base, regularModel

##################################################
# S1.25: low-rate data traffic, only 25 RBs      #
##################################################
[Config S1-25]
extends=S1-base, adaptedModel25

##################################################
# S1.25: low-rate data traffic, only 25 RBs UA   #
##################################################
[Config S1-25-UA]
extends=S1-base, regularModel25

#######################################################
# SingleCell Lab Configuration	                      #
# - Scenario 1B: Scen. 1 with param. variation:       #
#   varies the standard-deviation of the alert period #
#   no background traffic                             #
#######################################################
[Config S1-alert-variance]
extends=S1

*.server.app[*].period =  truncnormal(0.1s, ${perstddev=0..100 step 1}ms)
output-scalar-file = ${resultdir}/${configname}/perstddev_${perstddev}_${repetition}.sca
output-vector-file = ${resultdir}/${configname}/perstddev_${perstddev}_${repetition}.vec


######################################################
# S2-base: SingleCell Lab Configuration - Overload   #
# - similar to Scenario 2 as measured by             #
#   F. Schaipp (Rep.2) but target of background      #
#   traffic is same UE (OAI uses one RLC UA          #
#   instance for all traffic - see paper for details #
#   2.94 MB/s background traffic                     #
######################################################
[Config S2-base]
*.numUe = ${numUEs=1}
*.ue[*].numApps = 2

*.ue[*].app[0].typename = "AlertReceiver"
*.ue[*].app[1].typename = "UdpSink"
*.ue[*].app[1].localPort = 5000

*.server.numApps = ${numUEs} + 1 # one sender application for each UE + background traffic
# background traffic
*.server.app[0].typename = "UdpBasicApp"
*.server.app[0].destAddresses = "ue[0]"
*.server.app[0].sendInterval = truncnormal(60us, 1us) # 60us corresponds to 8.14 MiB/s background traffic
*.server.app[0].destPort = 5000
*.server.app[0].messageLength = 512B
*.server.app[0].packetName = "UDPBackground"

# CAMs
*.server.app[1..].destAddress = "ue[0]"
*.server.app[1..].localPort = 3088
*.server.app[1..].typename = "AlertSender"
*.server.app[1..].multicastInterface = ""  # server runs on a standard host - no need to set mulicastInterface manually
*.server.app[1..].packetSize = 300
*.server.app[1..].period = truncnormal(0.1s, 1ms)
*.server.app[1..].startTime = uniform(0s,0.02s)
*.server.app[1..].stopTime = 300.0s

[Config S2]
extends=S2-base, adaptedModel

[Config S2-UA]
# Please note that in contrast to the SimuLTE evaluation presented in [1], Simu5G uses an updated model and assigns logical connection IDs (LCIDs)
# based on source and destination address but does not assign different LCIDS for different ports.
# Therefore, the two data flows used in this scenario are mapped to a single bearer without any additional adaptations in this scenario, i.e. the
# results observed in this scenario for Simu5G are similar to the results observed for the adapted SimuLTE model reported in [1].
extends=S2-base, regularModel

[Config S2-25]
extends=S2-base, adaptedModel25
*.server.app[0].sendInterval = truncnormal(0.17ms, 0.01ms) # 0.17ms corresponds to 2.94 MB/s background traffic

[Config S2-25-UA]
extends=S2-base, regularModel25
*.server.app[0].sendInterval = truncnormal(0.17ms, 0.1ms) # 0.17ms corresponds to 2.94 MB/s background traffic

##################################################
# S3-base: low-rate data traffic - UE1 to UE0    #
##################################################
[Config S3-base]
*.numUe = ${numUEs=2}

*.ue[*].numApps = 1
*.ue[0].app[0].typename = "AlertReceiver"

*.ue[1].app[*].destAddress = "ue[0]"
*.ue[1].app[*].typename = "AlertSender"
*.ue[1].app[*].multicastInterface = ""  # server runs on a standard host - no need to set mulicastInterface manually
*.ue[1].app[*].packetSize = 300
*.ue[1].app[*].period =  truncnormal(0.1s, 0.1ms)
*.ue[1].app[*].startTime = uniform(0s,0.02s)
*.ue[1].app[*].stopTime = 300.0s

##################################################
# S3: low-rate data traffic UE-2-UE              #
##################################################
[Config S3]
extends=S3-base, adaptedModel

##################################################
# S3: low-rate data traffic UE-2-UE (UA)         #
##################################################
[Config S3-UA]
extends=S3-base, regularModel

########################################################################
# S4-base: low-rate data traffic - UE1 to UE0 in overload condition    #
#          where overload is caused by other background traffic        #
########################################################################
[Config S4-base]
*.numUe = ${numUEs=2}

*.ue[0].numApps = 2
*.ue[0].app[0].typename = "AlertReceiver"
*.ue[0].app[1].typename = "UdpSink"
*.ue[0].app[1].localPort = 5000

# UE 1 sends probe traffic
*.ue[1].numApps = 1
*.ue[1].app[0].destAddress = "ue[0]"
*.ue[1].app[0].typename = "AlertSender"
*.ue[1].app[0].multicastInterface = ""  # server runs on a standard host - no need to set mulicastInterface manually
*.ue[1].app[0].packetSize = 300
*.ue[1].app[0].period =  truncnormal(0.1s, 0.1ms)
*.ue[1].app[0].startTime = uniform(0s,0.02s)
*.ue[1].app[0].stopTime = 300.0s

# background traffic generated on server
*.server.numApps = 1
*.server.app[0].typename = "UdpBasicApp"
*.server.app[0].destAddresses = "ue[0]"
*.server.app[0].sendInterval = truncnormal(60us, 1us) # 60us corresponds to 8.14 MiB/s background traffic
*.server.app[0].destPort = 5000
*.server.app[0].messageLength = 512B
*.server.app[0].packetName = "UDPBackground"

##################################################
# S4: low-rate data traffic UE-2-UE, overload    #
##################################################
[Config S4]
extends=S4-base, adaptedModel

##################################################
# S4: low-rate data traffic UE-2-UE, overload    #
##################################################
[Config S4-UA]
extends=S4-base, regularModel


#### other (currently not used/implemented) configurations: ###

#######################################################
# S2: SingleCell Lab Configuration - Overload         #
# - identical to Scenario 2 as measured by            #
#   F. Schaipp (Rep.2) but results are not comparable #
#   since OAI has only one RLC queue for all UEs      #
#   (see paper for details)                           #
#######################################################
# [Config OpenAirInterface-CAM-DL-2-2UE]
# network = crownet.simulations.networks.LabSingleCellAdaptedRB50
# currently not implemented

################################################  D2D Scenarios ####################################################

[Config enable-D2D]
# Enable D2D for the eNodeB and the UEs involved in direct communications
*.eNB*.nicType = "LteNicEnbD2D"
*.ue[*].nicType = "LteNicUeD2D"
**.amcMode = "D2D"

# D2D-capable flows are started in D2D mode
*.ue[*].cellularNic.d2dInitialMode = true

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.cellularNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNB[*].cellularNic.phy.enableD2DCqiReporting = false
**.usePreconfiguredTxParams = true
**.d2dCqi = 15     # default: 7

[Config regularModel-D2D]
extends=regularModel,enable-D2D

[Config adaptedModel-D2D]
extends=adaptedModel,enable-D2D



##############################################################
# D1-base: low-rate data traffic - UE1 to UE0 via PC5 link   #
##############################################################
[Config D1-base]
*.numUe = ${numUEs=2}
*.numENB = ${numENB=1}

# enrolled multicast groups (see also demo.xml)
*.ue[*].configurator.mcastGroups = "224.0.0.10"

*.ue[*].numApps = 1
*.ue[0].app[0].typename = "AlertReceiver"

*.ue[1].app[*].destAddress = "224.0.0.10"          # IP address of the multicast group
*.ue[1].app[*].typename = "AlertSender"
*.ue[1].app[*].packetSize = 300
*.ue[1].app[*].period =  truncnormal(0.1s, 0.1ms)
*.ue[1].app[*].startTime = uniform(0s,0.02s)
*.ue[1].app[*].stopTime = 300.0s



######################################################
# D1: low-rate D2D data traffic UE-2-UE via PC5      #
######################################################
[Config D1]
extends=D1-base, adaptedModel-D2D

######################################################################
# D1-UA: low-rate D2D data traffic UE-2-UE via PC5 - unadapted model #
######################################################################
[Config D1-UA]
extends=D1-base, regularModel-D2D



##################################################################################################
# D2-base: low-rate data traffic - UE1 to UE0 via PC5 link                                       #
#          and additional background traffic from UE2 to UE0 via PC5 on the same multicast-group #
##################################################################################################
[Config D2-base]
*.numUe = ${numUEs=3}
*.numENB = ${numENB=1}

# enrolled multicast groups (see also demo.xml)
*.ue[*].configurator.mcastGroups = "224.0.0.10"

*.ue[0].numApps = 2
*.ue[0].app[0].typename = "AlertReceiver"
*.ue[0].app[1].typename = "UdpSink"
*.ue[0].app[1].localPort = 5000

*.ue[1].numApps = 1
*.ue[1].app[*].destAddress = "224.0.0.10"          # IP address of the multicast group
*.ue[1].app[*].typename = "AlertSender"
*.ue[1].app[*].packetSize = 300
*.ue[1].app[*].period =  truncnormal(0.1s, 0.1ms)
*.ue[1].app[*].startTime = uniform(0s,0.02s)
*.ue[1].app[*].stopTime = 300.0s

*.ue[2].numApps = 1
*.ue[2].app[*].typename = "UdpBasicApp"
*.ue[2].app[*].destAddresses = "224.0.0.10"
*.ue[2].app[*].destPort = 5000
*.ue[2].app[*].messageLength = 512B
*.ue[2].app[*].packetName = "UDPBackground"

*.ue[2].app[*].sendInterval = truncnormal(100ms, 1us) # 10 pkts/s (inter-arrival time of 100 ms), datarate 5 kiB/s

[Config D2]
extends=D2-base, adaptedModel-D2D

[Config D2-UA]
extends=D2-base, regularModel-D2D

[Config D3]
extends=D2-base, adaptedModel-D2D
*.ue[2].app[*].sendInterval = truncnormal(10ms, 1us) # 100 pkts/s (inter-arrival time of 10 ms), datarate 50 kiB/s

[Config D3-UA]
extends=D2-base, regularModel-D2D
*.ue[2].app[*].sendInterval = truncnormal(10ms, 1us) # 100 pkts/s (inter-arrival time of 10 ms), datarate 50 kiB/s

[Config D4]
extends=D2-base, adaptedModel-D2D
*.ue[2].app[*].sendInterval = truncnormal(0.17ms, 1us) # 5882 pkts/s (inter-arrival time of 0.17 ms), datarate 2941 kiB/s

[Config D4-UA]
extends=D2-base, regularModel-D2D
*.ue[2].app[*].sendInterval = truncnormal(0.17ms, 1us) # 5882 pkts/s (inter-arrival time of 0.17 ms), datarate 2941 kiB/s
