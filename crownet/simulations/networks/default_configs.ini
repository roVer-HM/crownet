#
# Default settings used by many simulations. Be carful when changing 
# values here because it my break other simulations. 
# 

# Usefull network level default settings.
########################################################################

[Config World_lte]
network = crownet.simulations.networks.World

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false

*.gloablDensityMap.typename = ""
*.flowController.typename = "" 

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625


[Config World_lte_dcd]
network = crownet.simulations.networks.World

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false


*.gloablDensityMap.typename = "GlobalDensityMap"
*.flowController.typename = "" 

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625


[Config World_lte_dcd_control]
network = crownet.simulations.networks.World

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false


*.gloablDensityMap.typename = "GlobalDensityMap"
*.flowController.typename =  "crownet.control.ControlManager"
*.flowController.host = "flowcontrol"
*.flowController.port = 9997
*.flowController.coreModule = "traci.core"
*.flowController.globalDcdModule = "gloablDensityMap"

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625

[Config World_lte_control]
network = crownet.simulations.networks.World

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false


*.gloablDensityMap.typename = ""
*.flowController.typename =  "crownet.control.ControlManager"
*.flowController.host = "flowcontrol"
*.flowController.port = 9997
*.flowController.coreModule = "traci.core"

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625

[Config noTraCI]
*.traci.typename = ""
*.flowController.typename =  ""
*.hasStoryboard = false
# if gloablDensityMap is used do not use signal initialization (requieres traci)
*.gloablDensityMap.useSignalMapInit = false

[Config D2D_General]
# Default D2D config
# World contains nodes in 3 different vectors
# pNode (pedestrians), vNode(vehicles) 
# and misc(stationary nodes not controlled by any mobility provider
# To allow communication between all the need to be in the same 
# multicast group
## Enrolled multicast groups (TraCI) for person and vehicle ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
# for vNode[*] and pNode[*]
*.*Node[*].configurator.interfaces = "cellular" #"wlan"
*.*Node[*].configurator.addressBase = "20.0.0.0"
*.*Node[*].configurator.netmask = "255.0.0.0"
*.*Node[*].cellularNic.processingDelayIn = 5518us
*.*Node[*].cellularNic.processingDelayOut = 1134us


**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
*.eNB[*].cellularNic.processingDelayOut = 1134us

# Misc (only set interface name. Rest is done with ip4Config.xml)
*.misc[*].configurator.interfaces = "cellular" 
*.misc[*].cellularNic.processingDelayIn = 5518us
*.misc[*].cellularNic.processingDelayOut = 1134us

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7


# Setup mobility provider
########################################################################

[Config withSumoBase]
*.traci.core.typename = "Core"
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.typename = "SumoLauncher"
*.traci.launcher.hostname = "sumo"
*.traci.launcher.port = 9999
*.traci.mapper.typename = "BasicModuleMapper"
*.traci.mapper.personType = "crownet.nodes.ApplicationLayerPedestrian"
*.traci.mapper.vehicleType = "crownet.nodes.ApplicationLayerVehicle"
*.traci.nodes.typename = "SumoCombinedNodeManager"
*.traci.nodes.personSinkModule = ".mobility"
*.traci.nodes.vehicleSinkModule = ".mobility"
*.traci.nodes.personNode = "pNode"
*.traci.nodes.vehicleNode = "vNode"
*.traci.subscriptions.typename = "BasicSubscriptionManager"
# actiavete visualisation. replace with "" empty string to deactivate
*.*Node[*].mobility.visualRepresentation = "^"

*.coordConverter.typename = "OsgCoordConverterSumo"
# UTM ZONE 32N
*.coordConverter.epsg_code = "EPSG:32632"
*.coordConverter.coreModule ="traci.core"
**.useVadere = false

[Config withSumoPeds]
extends = withSumoBase
**.ignoreVehicle = true
**.ignorePersons = false

[Config withSumoVehicles]
extends = withSumoBase
**.ignoreVehicle = false
**.ignorePersons = true

[Config withSumoBoth]
extends = withSumoBase
**.ignoreVehicle = false
**.ignorePersons = false


[Config withVadere]
*.traci.core.typename = "VadereCore"
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.typename = "VadereLauncher"
*.traci.launcher.hostname = "vadere"
*.traci.launcher.port = 9998
*.traci.mapper.typename = "VadereModuleMapper"
*.traci.mapper.personType = "crownet.nodes.ApplicationLayerPedestrian"
*.traci.nodes.typename = "VadereNodeManager"
*.traci.nodes.personSinkModule = ".mobility"
*.traci.nodes.vehicleSinkModule = ".mobility"
*.traci.nodes.personNode = "pNode"
*.traci.subscriptions.typename = "VadereSubscriptionManager"
# actiavete visualisation. replace with "" empty string to deactivate
*.*Node[*].mobility.visualRepresentation = "^"

*.coordConverter.typename = "OsgCoordConverterVadere"
*.coordConverter.coreModule ="traci.core"
**.useVadere = true
*.gloablDensityMap.useSignalMapInit = true



# Default application setups.
########################################################################


[Config simpelBroadcast]
*.pNode[*].numApps = 1
*.pNode[*].app[0].app.typename = "BaseBroadcast" 
*.pNode[*].app[0].app.startTime = uniform(0s,0.02s)
*.pNode[*].app[0].app.stopTime =  0s # stop never
*.pNode[*].app[0].app.hopCount = 5
*.pNode[*].app[0].app.packetLength = 500B
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 100ms
*.pNode[*].app[0].socket.destAddresses = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.pNode[*].app[0].socket.destPort = 1002
*.pNode[*].app[0].socket.localPort = 1002


[Config simpelBroadcastUdp]
extends = simpelBroadcast
*.pNode[*].app[0].typename = "CrownetUdpApp"

[Config simpelBroadcastAid]
extends = simpelBroadcast
*.pNode[*].app[0].typename = "CrownetAidApp"


[Config aidDcd_withArtery]
extends = World_lte_dcd
*.traci.mapper.personType = "crownet.nodes.AidPedestrian"
*.pNode[*].useArtery = true
*.pNode[*].useAid = true
*.pNode[*].numApps = 1
# Artery Settings
*.pNode[*].middleware.updateInterval = 0.1s # application trigger
*.pNode[*].middleware.datetime = "2020-06-01 12:35:00"
*.pNode[*].middleware.services = xmldoc("services.xml")
*.pNode[*].middleware.DenService.useCases = xml("<usecases/>")
*.pNode[*].vanetza.position.typename = "PedestrianPositionProvider"
# DcDMap Application
*.pNode[*].app[0].typename = "DensityMapApp"
*.pNode[*].app[0].app.typename = "ArteryDensityMapApp"
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 2s
# Beacon Application (Provided by artery.)
# NeighborhoodTable
*.pNode[*].nTable.typename = "" # remove. Provided by artery.


[Config pNode_dcdMapSimple]
*.pNode[*].numApps = 2
*.pNode[*].app[0..1].socket.typename = "UdpSocketManager"
# DcDMap Application
*.pNode[*].app[0].typename = "DensityMapApp"
*.pNode[*].app[0].app.typename = "DensityMapAppSimple"
*.pNode[*].app[0].app.startTime = 0s
*.pNode[*].app[0].app.mapCfg = crownet::MapCfg{ \
            writeDensityLog: true, \
            mapType: "ymf", \
            mapTypeLog: "all", \
            idStreamType: "insertionOrder"}
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 2s + uniform(0s, 50ms)
*.pNode[*].app[0].scheduler.startOffset = 5s + uniform(0s, 50ms)
# Beacon Application
*.pNode[*].app[1].typename = "BeaconApp"
*.pNode[*].app[1].app.typename = "BeaconDynamic"
*.pNode[*].app[1].app.startTime = uniform(0s, 50ms)
*.pNode[*].app[1].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[1].scheduler.generationInterval = 300ms + uniform(0s, 50ms)
# NeighborhoodTable
*.pNode[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.pNode[*].nTable.maxAge = 3s

*.fileWriterRegister.typename = "FileWriterRegister"
*.fileWriterRegister.register = { \
	neighborhoodWriter: crownet::NeighborhoodEventWriter{filePath: "beacons.csv"} \
	}

[Config pNode_dynamicDcdApp]
*.pNode[*].numApps = 2
*.pNode[*].app[0..1].socket.typename = "UdpSocketManager"
# DcDMap Application
*.pNode[*].app[0].typename = "DensityMapApp"
*.pNode[*].app[0].app.typename = "DensityMapAppSimple"
*.pNode[*].app[0].app.startTime = 0s
*.pNode[*].app[0].app.mapCfg = crownet::MapCfg{ \
            writeDensityLog: true, \
            mapType: "ymf", \
            mapTypeLog: "all", \
            idStreamType: "insertionOrder"}
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 2s + uniform(0s, 50ms)
*.pNode[*].app[0].scheduler.startOffset = 5s + uniform(0s, 50ms)
# Beacon Application
*.pNode[*].app[1].typename = "BeaconApp"
*.pNode[*].app[1].app.typename = "BeaconDynamic"
*.pNode[*].app[1].app.startTime = uniform(0s, 50ms)
*.pNode[*].app[1].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[1].scheduler.generationInterval = 300ms + uniform(0s, 50ms)
# NeighborhoodTable
*.pNode[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.pNode[*].nTable.maxAge = 3s

*.fileWriterRegister.typename = "FileWriterRegister"
*.fileWriterRegister.register = { \
	neighborhoodWriter: crownet::NeighborhoodEventWriter{filePath: "beacons.csv"} \
	}


[Config pApp_AlterSenderReceiver]
*.pNode[*].numApps = 2
*.pNode[*].app[0].typename = "AlertSender"
*.pNode[*].app[0].localPort = 1000 #3088+ancestorIndex(0)
*.pNode[*].app[0].startTime = uniform(0s,0.02s)
*.pNode[*].app[0].stopTime = 0s # 0:= never
*.pNode[*].app[0].destAddress = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.pNode[*].app[0].destPort = 1001
*.pNode[*].app[1].typename = "AlertReceiver"
*.pNode[*].app[1].localPort = 1001

[Config vApp_AlterSenderReceiver]
*.vNode[*].numApps = 2
*.vNode[*].app[0].typename = "AlertSender"
*.vNode[*].app[0].localPort = 1001 #3088+ancestorIndex(0)
*.vNode[*].app[0].startTime = uniform(0s,0.02s)
*.vNode[*].app[0].stopTime = 0s # 0:= never
*.vNode[*].app[0].destAddress = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.vNode[*].app[0].destPort = 1000
*.vNode[*].app[1].typename = "AlertReceiver"
*.vNode[*].app[1].localPort = 1000


[Config app_VRU]
*.pNode[*].numApps = 1
*.pNode[*].app[0].typename = "CrownetAidApp"
*.pNode[*].app[0].app.typename = "VruEtsiSimple" #"VruSimple"
*.pNode[*].app[0].app.startTime = uniform(0s,0.02s)
*.pNode[*].app[0].app.stopTime =  0s # 0:= never
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 500ms
*.pNode[*].app[0].socket.destAddresses = "224.0.0.1" # ALL_HOST_MCAST (automatically joined)
*.pNode[*].app[0].socket.destPort = 1002
*.pNode[*].app[0].socket.localPort = 1002

