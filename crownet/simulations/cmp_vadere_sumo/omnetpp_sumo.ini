
[General]
network = crownet.simulations.networks.World
image-path=../../images
# tkenv-plugin-path = ../../../inet/etc/plugins
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit= 1000s #1000s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 10 # 3 // 1


#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}

*.*Node[*].app[*].**.vector-recording = true
*.*Node[*].nTable.**.vector-recording = true
*.*Node[*].cellularNic.**.vector-recording = false
*.*Node[*].pos*.result-recording-modes = +vector
*.*Node[*].pos*.vector-recording=true

*.misc[*].app[*].**.vector-recording = true
*.misc[*].nTable.**.vector-recording = true
*.misc[*].cellularNic.**.vector-recording = false
*.misc[*].pos*.result-recording-modes = +vector
*.misc[*].pos*.vector-recording=true

**.vector-recording = true # TESTING ONLY
**.scalar-recording = true # TESTING ONLY

# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m
*.physicalEnvironment.config = xml("<environment/>")
*.visualization.sceneVisualizer.typename = "SumoSceneCanvasVisualizer"
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/bottleneck/bottleneck.net.xml")
*.visualization.sceneVisualizer.coordinateSystemModule = "coordConverter"
*.visualization.sceneVisualizer.zIndex = -1


#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel[0].shadowing = true
**.channelModel[0].scenario = "URBAN_MICROCELL"
**.channelModel[0].nodeb_height = 25
**.channelModel[0].ue_height = 1.5
**.channelModel[0].building_height = 20

**.channelModel[0].street_wide = 20
**.channelModel[0].antennaGainUe = 0
**.channelModel[0].antennGainEnB = 0

**.channelModel[0].correlation_distance = 25
**.channelModel[0].dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel[0].fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel[0].fading = false        # Enable/disable fading
**.channelModel[0].fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel[0].fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel[0].delay_rms = 363e-9

**.channelModel[0].extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel[0].downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel[0].uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel[0].d2d_interference = true      # if true, enables the interference computation for D2D connections

## Enrolled multicast groups (TraCI) for person and vehicle ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
# for vNode[*] and pNode[*]
*.*Node[*].ipv4.configurator.interfaces = "cellular" #"wlan"
*.*Node[*].ipv4.configurator.addressBase = "20.0.0.0"
*.*Node[*].ipv4.configurator.netmask = "255.0.0.0"
*.*Node[*].cellularNic.processingDelayIn = 5518us
*.*Node[*].cellularNic.processingDelayOut = 1134us


**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
*.eNB[*].cellularNic.processingDelayOut = 1134us

# Misc (only set interface name. Rest is done with ip4Config.xml)
*.misc[*].ipv4.configurator.interfaces = "cellular" 
*.misc[*].cellularNic.processingDelayIn = 5518us
*.misc[*].cellularNic.processingDelayOut = 1134us

**.usePreconfiguredTxParams = true
**.d2dCqi = 7
#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#============= eNodeB and UE defaults  ===========
# eNB
*.numEnb = 1
*.eNB[0].mobility.initFromDisplayString = false
*.eNB[0].mobility.initialX = 300m
*.eNB[0].mobility.initialY = 300m
*.eNB[0].nicType = "LteNicEnbD2D"
*.eNB[0].cellularNic.mac.amcMode = "D2D"

################ Node Settings #####################
## see World.ned

*.hasStoryboard = false
*.hasGlobalMap = true
*.hasWlan = false


################ Node Settings #####################
## see traci.mapper.vehicleType ="crownet.nodes.AidPedestrian"

**.identiyRegistryModule = "identiyRegistry"


*.*Node[*].typename = "crownet.nodes.AidPedestrian"
*.*Node[*].macCellId = 1
*.*Node[*].masterId = 1
*.*Node[*].nicType = "LteNicUeD2D"
*.*Node[*].radioDriver.dispatchInterfaceName = "cellular"
*.*Node[*].cellularNic.mac.amcMode = "D2D"
*.*Node[*].cellularNic.address = "auto"
*.*Node[*].useArtery = false

*.*Node[*].useArtery = false
*.*Node[*].hasWlan = false
*.*Node[*].numApps = 2
*.*Node[*].useVadere = false
*.*Node[*].app[0..1].typename = "CrownetAidApp"


# Density Map
*.*Node[*].app[0].app.typename = "DensityMapAppSimple"
*.*Node[*].app[0].app.startTime = uniform(0s,0.02s) # (4s, 4.02s) (0s,0.02s)
*.*Node[*].app[0].socket.destPort = 30001
*.*Node[*].app[0].socket.localPort = 30001
*.*Node[*].app[0].scheduler.generationInterval = 2s
*.*Node[*].app[0].scheduler.typename = "IntervalScheduler"

# Beacon
*.*Node[*].app[1].app.typename = "BeaconDynamic"
*.*Node[*].app[1].app.startTime =  uniform(0s,0.02s)
*.*Node[*].app[1].socket.destPort = 30002
*.*Node[*].app[1].socket.localPort = 30002
*.*Node[*].app[1].scheduler.typename = "IntervalScheduler"
*.*Node[*].app[1].scheduler.generationInterval = 1s

# Neighborhood table
*.*Node[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.*Node[*].nTable.maxAge = 7s

# Artery middleware settings
*.*Node[*].middleware.updateInterval = 0.1s # application trigger
*.*Node[*].middleware.datetime = "2020-06-01 12:35:00"
*.*Node[*].middleware.services = xml("<services/>")
*.*Node[*].middleware.DenService.useCases = xml("<usecases/>")

# Use the OsgCoordConverterLocal instead the OsgCoordRemote
*.coordConverter.typename = "OsgCoordConverterSumo"
**.coordConverterModule = "coordConverter"

[Config sumoBase]

**.ignoreVehicle = false
**.ignorePersons = false

*.traci.core.typename = "Core"
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.typename = "SumoLauncher"
*.traci.launcher.hostname = "sumo"
*.traci.launcher.port = 9999
*.traci.mapper.typename = "BasicModuleMapper"
*.traci.mapper.personType = "crownet.nodes.AidPedestrian"
*.traci.mapper.vehicleType = "crownet.nodes.AidVehicle"
*.traci.nodes.typename = "SumoCombinedNodeManager"
*.traci.nodes.personSinkModule = ".mobility"
*.traci.nodes.vehicleSinkModule = ".mobility"
*.traci.nodes.personNode = "pNode"
*.traci.nodes.vehicleNode = "vNode"

*.traci.subscriptions.typename = "BasicSubscriptionManager"
# actiavete visualisation. replace with "" empty string to deactivate
*.*Node[*].mobility.visualRepresentation = "^"




[Config sumoSimple]
extends=sumoBase
*.traci.launcher.sumoCfgBase = absFilePath("sumo/simple/simple.sumo.cfg")
*.coordConverter.netFile = xmldoc("sumo/simple/simple.net.xml")
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/simple/simple.net.xml")

[Config sumoBottelneck]
extends=sumoBase
*.traci.launcher.sumoCfgBase = absFilePath("sumo/bottleneck/bottleneck.sumo.cfg")
*.coordConverter.netFile = xmldoc("sumo/bottleneck/bottleneck.net.xml")
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/bottleneck/bottleneck.net.xml")


[Config combined]
extends=sumoBase
*.traci.launcher.sumoCfgBase = absFilePath("sumo/combined/combined.sumo.cfg")
*.coordConverter.netFile = xmldoc("sumo/combined/combined.net.xml")
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/combined/combined.net.xml")

