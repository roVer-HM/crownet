
[General]
network = crownet.simulations.networks.World
image-path=../../images
# tkenv-plugin-path = ../../../inet/etc/plugins
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=1000s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
repeat = 10 # 3 // 1

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}
**.vector-recording = true # TESTING ONLY
**.scalar-recording = true # TESTING ONLY

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel.shadowing = true
**.channelModel.scenario = "URBAN_MICROCELL"
**.channelModel.nodeb_height = 25
**.channelModel.ue_height = 1.5
**.channelModel.building_height = 20

**.channelModel.street_wide = 20
**.channelModel.carrierFrequency = 2.6  # carrier frequency (in GHz)
**.channelModel.antennaGainUe = 0
**.channelModel.antennGainEnB = 0

**.channelModel.correlation_distance = 25
**.channelModel.dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel.fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel.fading = false        # Enable/disable fading
**.channelModel.fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel.fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel.delay_rms = 363e-9

**.channelModel.extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel.downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel.uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel.d2d_interference = true      # if true, enables the interference computation for D2D connections

**.usePreconfiguredTxParams = true
**.d2dCqi = 7
#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#============= eNodeB and UE defaults  ===========
# eNB
*.numEnb = 1
*.eNB[0].mobility.initFromDisplayString = false
*.eNB[0].mobility.initialX = 300m
*.eNB[0].mobility.initialY = 300m
*.eNB[0].nicType = "LteNicEnbD2D"
*.eNB[0].cellularNic.mac.amcMode = "D2D"

################ Node Settings #####################
## see World.ned

*.hasStoryboard = false
*.hasGlobalMap = true
*.hasWlan = false


################ Node Settings #####################

**.identiyRegistryModule = "identiyRegistry"

*.pNode[*].typename = "crownet.nodes.AidPedestrian"
*.pNode[*].macCellId = 1
*.pNode[*].masterId = 1
*.pNode[*].nicType = "LteNicUeD2D"
*.pNode[*].radioDriver.dispatchInterfaceName = "cellular"
*.pNode[*].cellularNic.mac.amcMode = "D2D"
*.pNode[*].cellularNic.address = "auto"
*.pNode[*].useArtery = false

*.pNode[*].useArtery = false
*.pNode[*].hasWlan = false
*.pNode[*].numApps = 2
*.pNode[*].app[0..1].typename = "CrownetAidApp"

# Density Map
*.pNode[*].app[0].app.typename = "DensityMapAppSimple"
*.pNode[*].app[0].app.startTime = uniform(0s,0.02s) # (4s, 4.02s) (0s,0.02s)
*.pNode[*].app[0].socket.destPort = 30001
*.pNode[*].app[0].socket.localPort = 30001
*.pNode[*].app[0].scheduler.generationInterval = 2s
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"

# Beacon
*.pNode[*].app[1].app.typename = "BeaconSimple"
*.pNode[*].app[1].app.startTime =  uniform(0s,0.02s)
*.pNode[*].app[1].socket.destPort = 30002
*.pNode[*].app[1].socket.localPort = 30002
*.pNode[*].app[1].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[1].scheduler.generationInterval = 1s

# Neighborhood table
*.pNode[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.pNode[*].nTable.maxAge = 7s

# Artery middleware settings
*.pNode[*].middleware.updateInterval = 0.1s # application trigger
*.pNode[*].middleware.datetime = "2020-06-01 12:35:00"
*.pNode[*].middleware.services = xml("<services/>")
*.pNode[*].middleware.DenService.useCases = xml("<usecases/>")

# Use the OsgCoordConverterLocal instead the OsgCoordRemote
*.coordConverter.typename = "OsgCoordConverterVadere"
**.coordConverterModule = "coordConverter"

## Enrolled multicast groups (TraCI) ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
*.*Node[*].configurator.interfaces = "cellular"
*.*Node[*].configurator.addressBase = "20.0.0.0"
*.*Node[*].configurator.netmask = "255.0.0.0"


[Config vadereBase]

*.traci.launcher.hostname = "vadere"
*.traci.launcher.port = 9998
**.vadereScenarioPath = "vadere/scenarios/bottleneck.scenario"
# **.vadereScenarioPath = "vadere/scenarios/simple.scenario"
*.traci.core.version = -1
*.traci.core.typename = "VadereCore"
*.traci.core.selfStopping = false

*.traci.subscriptions.typename = "VadereSubscriptionManager"
*.traci.nodes.typename = "VadereNodeManager"

*.traci.mapper.personType = "crownet.nodes.AidPedestrian"
*.traci.mapper.vehicleType = "crownet.nodes.AidVehicle"
*.pNode[*].mobility.typename  = "crownet.artery.traci.InetVaderePersonMobility"

*.pNode[*].vanetza.position.typename = "PedestrianPositionProvider"


