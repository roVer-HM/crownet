[General]
network = crownet.simulations.networks.World
image-path=../../images
print-undisposed = true
num-rngs = 2  # seperate random base for entropy map

#============= Simulation parameters ================
sim-time-limit=400s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!

### includes
###include include ./general.ini

[Config Defaults]

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}

**.scalar-recording = true
#**.statistic-recording = false
**.routingRecorder.enabled = false

*.server.**.vector-recording = false
*.eNB[*].sctp.**.vector-recording = false
*.eNB[*].**.vector-recording = true
*.eNB[*].cellularNic.mac.**.vector-recording = true
*.eNB[*].cellularNic.phy.**.vector-recording = true
*.eNB[*].pos*.result-recording-modes = +vector
*.eNB[*].pos*.vector-recording=true

*.*Node[*].app[*].**.vector-recording = true
*.*Node[*].app[*].packetMeter*.*.vector-recording = false
*.*Node[*].app[*].app.*DataRate.throughput.interval = 1s
*.*Node[*].nTable.**.vector-recording = true
*.*Node[*].cellularNic.phy.**.vector-recording = true
*.*Node[*].cellularNic.channelModel[*].**.result-recording-modes = +vector
*.*Node[*].cellularNic.channelModel[*].**.vector-recording = true
*.*Node[*].cellularNic.**.vector-recording = false
*.*Node[*].pos*.result-recording-modes = +vector
*.*Node[*].pos*.vector-recording=true

*.misc[*].app[*].packetMeter*.*.vector-recording = false
*.misc[*].app[*].app.*DataRate.throughput.interval = 1s
*.misc[*].nTable.**.vector-recording = true
*.misc[*].cellularNic.phy.**.vector-recording = true
*.misc[*].cellularNic.channelModel[*].**.result-recording-modes = +vector
*.misc[*].cellularNic.channelModel[*].**.vector-recording = true
*.misc[*].cellularNic.**.vector-recording = false
*.misc[*].pos*.result-recording-modes = +vector
*.misc[*].pos*.vector-recording=true

#**.vector-recording = true

#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m

#============= AMC module parameters ===============
**.ueTxPower = 23 # default 26
**.d2dTxPower = 23 # default 26
**.eNodeBTxPower = 43 # default 46


#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz
**.componentCarrier[0].carrierFrequency = 2600MHz
**.numBands = 25	# componentCarrier


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel[0].shadowing = true
**.channelModel[0].scenario = "URBAN_MACROCELL"
**.channelModel[0].nodeb_height = 25
**.channelModel[0].ue_height = 1.5
**.channelModel[0].building_height = 20

**.channelModel[0].street_wide = 20
**.channelModel[0].tolerateMaxDistViolation = true
**.channelModel[0].correlation_distance = 25

**.channelModel[0].antennaGainUe = 0
**.channelModel[0].antennGainEnB = 18


**.channelModel[0].dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel[0].fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel[0].fading = false        # Enable/disable fading
**.channelModel[0].fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel[0].fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel[0].delay_rms = 363e-9

**.channelModel[0].extCell_interference = true # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel[0].downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel[0].uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel[0].d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 300000B  	            # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


# global parameters
**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")

# eNodeB
*.eNB[*].nicType = "LteNicEnbD2D"
*.eNB[*].cellularNic.mac.amcMode = "D2D"

# (person and vehicle aka pNode and vNode)
*.*Node[*].macCellId = 1
*.*Node[*].masterId = 1
*.*Node[*].nicType = "LteNicUeD2D"
*.*Node[*].radioDriver.dispatchInterfaceName = "cellular"
*.*Node[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.*Node[*].cellularNic.address = "auto"

# Misc
*.misc[*].macCellId = 1
*.misc[*].masterId = 1
*.misc[*].nicType = "LteNicUeD2D"
*.misc[*].radioDriver.dispatchInterfaceName = "cellular"
*.misc[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.misc[*].cellularNic.address = "auto"


[Config World_lte_dcd]

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false

*.globalDensityMap.typename = "GlobalDensityMap"
*.flowController.typename = "" 

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625



[Config D2D_General]
extends = World_lte_dcd
# Default D2D config
# World contains nodes in 3 different vectors
# pNode (pedestrians), vNode(vehicles) 
# and misc(stationary nodes not controlled by any mobility provider
# To allow communication between all the need to be in the same 
# multicast group
## Enrolled multicast groups (TraCI) for person and vehicle ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
# for vNode[*] and pNode[*]
*.*Node[*].ipv4.configurator.interfaces = "cellular" #"wlan"
*.*Node[*].ipv4.configurator.addressBase = "20.0.0.0"
*.*Node[*].ipv4.configurator.netmask = "255.0.0.0"
*.*Node[*].cellularNic.processingDelayIn = 5518us
*.*Node[*].cellularNic.processingDelayOut = 1134us


**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
*.eNB[*].cellularNic.processingDelayOut = 1134us

# Misc (only set interface name. Rest is done with ip4Config.xml)
*.misc[*].ipv4.configurator.interfaces = "cellular" 
*.misc[*].cellularNic.processingDelayIn = 5518us
*.misc[*].cellularNic.processingDelayOut = 1134us

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7
###include include ./general.ini END
###include include ./mobility_provider.ini

# Setup mobility provider
########################################################################

[Config withSumoBase]
*.traci.core.typename = "Core"
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.typename = "SumoLauncher"
*.traci.launcher.hostname = "sumo"
*.traci.launcher.port = 9999
*.traci.mapper.typename = "BasicModuleMapper"
*.traci.mapper.personType = "crownet.nodes.ApplicationLayerPedestrian"
*.traci.mapper.vehicleType = "crownet.nodes.ApplicationLayerVehicle"
*.traci.nodes.typename = "SumoCombinedNodeManager"
*.traci.nodes.personSinkModule = ".mobility"
*.traci.nodes.vehicleSinkModule = ".mobility"
*.traci.nodes.personNode = "pNode"
*.traci.nodes.vehicleNode = "vNode"
*.traci.subscriptions.typename = "BasicSubscriptionManager"
# actiavete visualisation. replace with "" empty string to deactivate
*.*Node[*].mobility.visualRepresentation = "^"

*.coordConverter.typename = "OsgCoordConverterSumo"
# UTM ZONE 32N
*.coordConverter.epsg_code = "EPSG:32632"
*.coordConverter.coreModule ="traci.core"
**.useVadere = false

[Config withSumoPeds]
extends = withSumoBase
**.ignoreVehicle = true
**.ignorePersons = false

[Config withSumoVehicles]
extends = withSumoBase
**.ignoreVehicle = false
**.ignorePersons = true

[Config withSumoBoth]
extends = withSumoBase
**.ignoreVehicle = false
**.ignorePersons = false


[Config withVadere]
*.traci.core.typename = "VadereCore"
*.traci.core.version = -1
*.traci.core.selfStopping = false
*.traci.launcher.typename = "VadereLauncher"
*.traci.launcher.hostname = "vadere"
*.traci.launcher.port = 9998
*.traci.mapper.typename = "VadereModuleMapper"
*.traci.mapper.personType = "crownet.nodes.ApplicationLayerPedestrian"
*.traci.nodes.typename = "VadereNodeManager"
*.traci.nodes.personSinkModule = ".mobility"
*.traci.nodes.vehicleSinkModule = ".mobility"
*.traci.nodes.personNode = "pNode"
*.traci.subscriptions.typename = "VadereSubscriptionManager"
# actiavete visualisation. replace with "" empty string to deactivate
*.*Node[*].mobility.visualRepresentation = "^"

*.coordConverter.typename = "OsgCoordConverterVadere"
*.coordConverter.coreModule ="traci.core"
**.useVadere = true
*.globalDensityMap.useSignalMapInit = true

[Config noTraCI]
*.traci.typename = ""
*.flowController.typename =  ""
*.hasStoryboard = false
# if globalDensityMap is used do not use signal initialization (requieres traci)
*.globalDensityMap.useSignalMapInit = false


[Config coordConverter_local_l]
# bounds based on munich.net.xml
*.coordConverter.typename = "OsgCoordConverterLocal"
*.coordConverter.srs_code = "+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
*.coordConverter.offset_x = -689405.84 m
*.coordConverter.offset_y = -5335147.07 m
*.coordConverter.xBound = 5325.50m
*.coordConverter.yBound = 4232.08m


[Config coordConverter_local_m]
# bounds based on vadere scenarios circle/mf_dynamic_m
*.coordConverter.typename = "OsgCoordConverterLocal"
*.coordConverter.srs_code = "+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"
*.coordConverter.offset_x = -692152.0894735109m
*.coordConverter.offset_y = -5337384.6661008m
*.coordConverter.xBound = 415.50m
*.coordConverter.yBound = 394.08m

[Config gui_vis_munic_clean]
*.coordConverter.typename = "OsgCoordConverterSumo"
*.coordConverter.netFile = xmldoc("sumo/munich/munich.net.xml")

*.visualization.sceneVisualizer.typename = "OpenStreetMapSceneCanvasVisualizer"
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/munich/osm/munich_clean.osm")
*.visualization.sceneVisualizer.coordinateSystemModule = "coordConverter"
*.visualization.sceneVisualizer.zIndex = -1

[Config _misc_bonn_motion]
*.bonnMotionServer.typename = "BonnMotionMobilityServer"
*.bonnMotionServer.moduleType  = "crownet.nodes.ApplicationLayerPedestrian"
*.bonnMotionServer.vectorName  = "misc"
*.globalDensityMap.vectorNodeModule = ""
*.globalDensityMap.nodeModules = ""
*.globalDensityMap.traciModuleListener = ""
*.globalDensityMap.useSignalMapInit = false
*.globalDensityMap.writerType = "sql"
*.misc[*].mobility.typename = "BonnMotionMobilityClient"
*.misc[*].middleware.typename = ""
*.misc[*].useArtery = false
*.misc[*].useVadere = false
*.misc[*].typename =  "crownet.nodes.ApplicationLayerPedestrian"

[Config _misc_stationary]
*.misc[*].middleware.typename = ""
*.misc[*].mobility.typename = "StationaryMobility"
*.misc[*].mobility.coordinateSystemModule = "coordConverter"
*.misc[*].mobility.initFromDisplayString = false
*.misc[*].typename = "crownet.nodes.ApplicationLayerPedestrian"


[Config _misc_random_walk_m]
*.misc[*].middleware.typename = ""
*.misc[*].mobility.typename = "RandomWaypointMobility"
*.misc[*].mobility.coordinateSystemModule = "coordConverter"
*.misc[*].mobility.initFromDisplayString = false
# todo: normal distribution truncated to nonnegative values
#		only cutting negatives is not correct here. Cut at e.g. +-6-sigma
*.misc[*].mobility.speed = truncnormal(1.34mps, 0.26mps)
*.misc[*].mobility.waitTime = 0s
*.misc[*].mobility.constraintAreaMinX = 0m
*.misc[*].mobility.constraintAreaMinY = 0m
*.misc[*].mobility.constraintAreaMinZ = 0m
*.misc[*].mobility.constraintAreaMaxX = 415.50m
*.misc[*].mobility.constraintAreaMaxY = 394.08m
*.misc[*].mobility.constraintAreaMaxZ = 10m
*.misc[*].typename = "crownet.nodes.ApplicationLayerPedestrian"
###include include ./mobility_provider.ini END
###include include ./application_settings.ini

#
# Default settings used by many simulations. Be carful when changing 
# values here because it my break other simulations. 
# 
########################################################################


[Config misc_beacon_map_udp]
**.cellSize = 5.0m
*.misc[*].numApps = 2
*.misc[*].app[*].socket.typename = "UdpSocketManager"
*.misc[*].app[*].scheduler.typename = "DynamicMaxBandwidthScheduler"
*.misc[*].app[*].scheduler.neighborhoodSizeProvider = "^.^.app[1].app"

## Beacon ##
*.misc[*].app[0].typename = "BeaconApp"
*.misc[*].app[0].app.typename = "BeaconDynamic"
*.misc[*].app[0].app.appendResourceSharingDomainId = true
*.misc[*].app[0].app.startTime = uniform(0s,10ms)
*.misc[*].app[0].app.packetLength = 1000B
### Beacon scheduling ###
#generationInterval --> lower bound
*.misc[*].app[0].scheduler.generationInterval = 500ms
*.misc[*].app[0].scheduler.estimatedAvgPaketSize = 300b
*.misc[*].app[0].scheduler.maxApplicationBandwidth = 50kbps
*.misc[*].app[0].scheduler.numberPackets  = 1


## Density Map ##
*.misc[*].app[1].typename = "DensityMapApp"
*.misc[*].app[1].app.typename = "DensityMapAppSimple"
*.misc[*].app[1].app.appendResourceSharingDomainId = true
*.misc[*].app[1].app.startTime = 0s
*.misc[*].app[1].app.mapCfg = crownet::MapCfgYmfPlusDistStep{ \
	writeDensityLog: true, \
	mapTypeLog: "ymfPlusDistStep", \
	cellAgeTTL: 15.0s, \
	alpha: 0.9, \
	stepDist: 60.0, \
	idStreamType: "insertionOrder", \
	appendRessourceSharingDomainId: true, \
	logType: "sql"}
### Density Map scheduling ###
# Schedule multiple packets in each interval
#generationInterval --> lower bound
*.misc[*].app[1].scheduler.generationInterval = 2s
*.misc[*].app[1].scheduler.startOffset = uniform(0s, 4000ms)
*.misc[*].app[1].scheduler.estimatedAvgPaketSize = 1400B # asume full packet
*.misc[*].app[1].scheduler.maxApplicationBandwidth = 500kbps
*.misc[*].app[1].scheduler.numberPackets  = -1
*.misc[*].app[1].scheduler.amountOfData  = 200MB # complet map
*.misc[*].app[1].app.maxPduLength = 1400B


## Log ##
*.fileWriterRegister.typename = ""
*.globalDensityMap.writeMapInterval = 1000ms

## Neighborhood Table ##
*.misc[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.misc[*].nTable.maxAge = 5s	# TTL
###include include ./application_settings.ini END
###include include ./eNB_settings.ini

[Config _enb_default]
*.eNB[*].mobility.initFromDisplayString = false
*.eNB[*].nicType = "LteNicEnbD2D"
*.eNB[*].cellularNic.mac.amcMode = "D2D"
*.eNB[*].mobility.coordinateSystemModule = "coordConverter"
**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data

# handover + dynamicCellAssociation
*.pNode[*].cellularNic.phy.dynamicCellAssociation = true
*.vNode[*].cellularNic.phy.dynamicCellAssociation = true
*.misc[*].cellularNic.phy.dynamicCellAssociation = true
**.cellularNic.phy.enableHandover = true


[Config mf_1d_1]
extends = _enb_default
# Enb Settings
*.numEnb = 1
*.eNB[0].mobility.initialLatitude = 48.162190092718085deg
*.eNB[0].mobility.initialLongitude = 11.586633415916312deg
# single cell: 
# - no handover / dynamicCellAssociation
# - use configured cell (id = 1)
*.pNode[*].cellularNic.phy.dynamicCellAssociation = false
*.vNode[*].cellularNic.phy.dynamicCellAssociation = false
*.misc[*].cellularNic.phy.dynamicCellAssociation = false
**.cellularNic.phy.enableHandover = false
*.pNode[*].cellularNic.phy.macCellId = 1
*.vNode[*].cellularNic.phy.macCellId = 1
*.misc[*].cellularNic.phy.macCellId = 1
*.pNode[*].cellularNic.phy.masterId = 1
*.vNode[*].cellularNic.phy.masterId = 1
*.misc[*].cellularNic.phy.masterId = 1


[Config eNB_mf_m_single_cell]
# Enb Settings
extends = _enb_default
*.numEnb = 1
*.eNB[0].mobility.initialLatitude = 48.162190092718085deg
*.eNB[0].mobility.initialLongitude = 11.586633415916312deg
# single cell: 
# - no handover / dynamicCellAssociation
# - use configured cell (id = 1)
*.pNode[*].cellularNic.phy.dynamicCellAssociation = false
*.vNode[*].cellularNic.phy.dynamicCellAssociation = false
*.misc[*].cellularNic.phy.dynamicCellAssociation = false
**.cellularNic.phy.enableHandover = false
*.pNode[*].cellularNic.phy.macCellId = 1
*.vNode[*].cellularNic.phy.macCellId = 1
*.misc[*].cellularNic.phy.macCellId = 1
*.pNode[*].cellularNic.phy.masterId = 1
*.vNode[*].cellularNic.phy.masterId = 1
*.misc[*].cellularNic.phy.masterId = 1
###include include ./eNB_settings.ini END

### Dynamic  ###

[Config _dynmaic_m_base_single_cell]
extends = Defaults, D2D_General, eNB_mf_m_single_cell 

[Config final_dynamic_m_vadere]
extends = _dynmaic_m_base_single_cell, withVadere, pedestrian_beacon_map_udp
# used for automated study

[Config final_dynamic_m_sumo]
extends = _dynmaic_m_base_single_cell, withSumoBoth, pedestrian_beacon_map_udp
# used for automated study

[Config final_dynamic_m_bonn_motion]
extends = _dynmaic_m_base_single_cell, noTraCI, coordConverter_local_m, _misc_bonn_motion, misc_beacon_map_udp
# used for automated study
*.misc[*].cellularNic.channelModel[*].rcvdSinrUl*.vector-recording = true
*.misc[*].cellularNic.channelModel[*].**.vector-recording  = false
*.eNB[*].cellularNic.mac.measuredItbs*.vector-recording = false
*.eNB[*].cellularNic.mac.sentPacketToLowerLayer*.vector-recording = false
*.eNB[*].cellularNic.mac.receivedPacketFromLowerLayer*.vector-recording = false
*.misc[*].cellularNic.phy.averageCqiD2D*.vector-recording = false
*.fileWriterRegister.typename = ""
cmdenv-status-frequency = 600s



