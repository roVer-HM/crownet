[General]
network = crownet.simulations.networks.World
image-path=../../images
print-undisposed = true

#============= Simulation parameters ================
sim-time-limit=400s
#warmup-period=60s      # Note: When analyzing the results, you need to apply the same warmup-period to measurement data!
#repeat = 3

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}

**.vector-recording = true
**.scalar-recording = true
#**.statistic-recording = false
**.routingRecorder.enabled = false


#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel[0].shadowing = true
**.channelModel[0].scenario = "URBAN_MICROCELL"
**.channelModel[0].nodeb_height = 25
**.channelModel[0].ue_height = 1.5
**.channelModel[0].building_height = 20

**.channelModel[0].street_wide = 20
**.channelModel[0].antennaGainUe = 0
**.channelModel[0].antennGainEnB = 0

**.channelModel[0].correlation_distance = 25
**.channelModel[0].dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel[0].fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel[0].fading = false        # Enable/disable fading
**.channelModel[0].fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel[0].fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel[0].delay_rms = 363e-9

**.channelModel[0].extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel[0].downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel[0].uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel[0].d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#=============  defaults  ===========
# eNodeB
*.numEnb = 1
*.eNB[0].mobility.initFromDisplayString = false
*.eNB[0].mobility.initialX = 20m
*.eNB[0].mobility.initialY = 20m
*.eNB*.nicType = "LteNicEnbD2D"
*.eNB*.cellularNic.mac.amcMode = "D2D"

# UE Peds
*.Node[*].macCellId = 1
*.pNode[*].masterId = 1
*.pNode[*].nicType = "LteNicUeD2D"
*.pNode[*].radioDriver.dispatchInterfaceName = "cellular"
*.pNode[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.pNode[*].cellularNic.address = "auto"

# UE Vehicles
*.vNode[*].macCellId = 1
*.vNode[*].masterId = 1
*.vNode[*].nicType = "LteNicUeD2D"
*.vNode[*].radioDriver.dispatchInterfaceName = "cellular"
*.vNode[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.vNode[*].cellularNic.address = "auto"



# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m


**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")

# END General

#############################################
include ../networks/default_configs.ini
#############################################


[Config ArterySetup]
extends = withSumoBoth, D2D_General
# Artery Settings
*.pNode[*].useArtery = true
*.pNode[*].middleware.updateInterval = 0.1s # application trigger
*.pNode[*].middleware.datetime = "2020-06-01 12:35:00"
*.pNode[*].middleware.services = xmldoc("services.xml")
*.pNode[*].middleware.DenService.useCases = xml("<usecases/>")
*.pNode[*].vanetza.position.typename = "PersonPositionProvider"
*.pNode[*].mobiliy.typename = "artery.inet.PersonMobility"

*.vNode[*].useArtery = true
*.vNode[*].middleware.updateInterval = 0.1s # application trigger
*.vNode[*].middleware.datetime = "2020-06-01 12:35:00"
*.vNode[*].middleware.services = xmldoc("services.xml")
*.vNode[*].middleware.DenService.useCases = xml("<usecases/>")
*.pNode[*].vanetza.position.typename = "VehiclePositionProvider"
*.pNode[*].mobiliy.typename = "artery.inet.VehicleMobility"




[Config simple_cam_den]
extends = ArterySetup
*.traci.launcher.sumoCfgBase = absFilePath("sumo/simpleCrossing/example_peds_cars.sumo.cfg")
*.coordConverter.netFile = xmldoc(absFilePath("sumo/simpleCrossing/example.net.xml"))

*.visualization.sceneVisualizer.typename = "SumoSceneCanvasVisualizer"
*.visualization.sceneVisualizer.mapFile = xmldoc("sumo/simpleCrossing/example.net.xml")
*.visualization.sceneVisualizer.coordinateSystemModule = "coordConverter"
*.visualization.sceneVisualizer.zIndex = -1




