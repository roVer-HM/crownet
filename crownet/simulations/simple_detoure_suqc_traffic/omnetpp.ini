[General]
network = crownet.simulations.networks.World_Wlan
################ Output Settings #####################
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
#repeat = 3
seed-set = 0
sim-time-limit = 200s
*.traci.launcher.hostname = "vadere"
*.traci.launcher.seed = 0
*.traci.launcher.useVadereSeed = true

################ Result recording #####################

**.scalar-recording = true
**.bin-recording = false
**.result-recording-modes =  default,-histogram
**.ip.*.scalar-recording=false
**.ip.*.vector-recording=false
**.lo.*.scalar-recording=false
**.lo.*.vector-recording=false
record-eventlog = false

*.*Node[*].app[*].**.vector-recording = true
*.*Node[*].nTable.**.vector-recording = true
*.*Node[*].cellularNic.**.vector-recording = false
*.*Node[*].pos*.result-recording-modes = +vector
*.*Node[*].pos*.vector-recording=true
*.*Node[*].wlanNic[*].mac.**.vector-recording = true


*.misc[*].app[*].**.vector-recording = true
*.misc[*].nTable.**.vector-recording = true
*.misc[*].cellularNic.**.vector-recording = false
*.misc[*].pos*.result-recording-modes = +vector
*.misc[*].pos*.vector-recording=true
*.misc[*].wlanNic[*].mac.**.vector-recording = true 

**.vector-recording = true


################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
*.traci.mapper.personType = "crownet.nodes.ApplicationLayerPedestrian"

################ World / TraCI Setup #####################
# default values. see World_Wlan and World network

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"

################ Node Settings #####################
## see traci.mapper.personType ="crownet.nodes.AidPedestrian"

*.pNode[*].useArtery = false
*.pNode[*].hasCellular = false
*.pNode[*].hasWlan = true
*.pNode[*].numWlanNic = 1
*.pNode[*].aid.densityMapApp.typename = ""
*.pNode[*].aid.beaconApp.typename = ""

*.pNode[*].wlanNic[*].mgmt.typename = "Ieee80211MgmtAdhoc"
*.pNode[*].wlanNic[*].agent.typename = ""
*.pNode[*].wlanNic[*].forwarding = true
*.pNode[*].wlanNic[*].multicastForwarding = true
*.pNode[*].wlanNic[*].radio.antenna.mobilityModule = "^.^.^.mobility"
*.pNode[*].app[*].multicastInterface = "wlanNic0"

# HostAutoConfigurator
*.pNode[*].ipv4.configurator.interfaces = "wlanNic0"
*.pNode[*].ipv4.configurator.mcastGroups = "224.0.0.10"
*.pNode[*].ipv4.configurator.addressBase = "20.0.5.0"
*.pNode[*].ipv4.configurator.netmask = "255.0.0.0"

*.misc[*].typename = "crownet.nodes.ApplicationLayerPedestrian"
*.misc[*].useArtery = false
*.misc[*].hasCellular = false
*.misc[*].hasWlan = true
*.misc[*].numWlanNic = 1
*.misc[*].aid.densityMapApp.typename = ""
*.misc[*].aid.beaconApp.typename = ""

*.misc[*].wlanNic[*].mgmt.typename = "Ieee80211MgmtAdhoc"
*.misc[*].wlanNic[*].agent.typename = ""
*.misc[*].wlanNic[*].forwarding = true
*.misc[*].wlanNic[*].multicastForwarding = true
*.misc[*].wlanNic[*].radio.antenna.mobilityModule = "^.^.^.mobility"
*.misc[*].app[*].multicastInterface = "wlanNic0"

# HostAutoConfigurator - misc already exist (redundat)
*.misc[*].ipv4.configurator.interfaces = "wlanNic0"
*.misc[*].ipv4.configurator.mcastGroups = "224.0.0.10"
*.misc[*].ipv4.configurator.addressBase = "20.0.5.0" # same space like pNode
*.misc[*].ipv4.configurator.netmask = "255.0.0.0"


[Config basic]

*.misc[*].useVadere=false
*.misc[*].useArtery =false
*.misc[*].middleware.typename = ""
*.numStationary = 0
*.numMisc = 1
*.misc[0].mobility.initFromDisplayString = false
*.misc[0].mobility.typename = "StationaryMobility"
*.misc[0].mobility.initialX = 30m
*.misc[0].mobility.initialY = 93.5m


[Config dimensional]

**wlan*[*].radio.typename = "Ieee80211DimensionalRadio"
**wlan*[*].radio.transmitter.power = 2.0mW
**wlan*[*].radio.receiver.sensitivity = -85dBm
**wlan*[*].radio.receiver.snirThreshold = 4dB

*.radioMedium.typename = "Ieee80211DimensionalRadioMedium"
*.radioMedium.pathLoss.typename = "LogNormalShadowing"
*.radioMedium.obstacleLoss.typename = "IdealObstacleLoss" 
**.errorModel.snirMode = "mean"
**.receiver.snirThresholdMode = "mean"


[Config vadereBasic]
extends = basic
network = crownet.simulations.networks.World_Wlan

## send and receive detour information
*.misc[0].numApps = 1
*.misc[0].app[0].typename = "UdpDetourApp"
*.misc[0].app[0].incidentTime = 100s
*.misc[0].app[0].reason = "E2002_closed"
*.misc[0].app[0].closedTarget = "2002"
*.misc[0].app[0].alternativeRoute = "2003,2001" #
*.misc[0].app[0].repeatTime = 600s
*.misc[0].app[0].repeateInterval = 1s
*.misc[0].app[0].localPort = 3000
*.misc[0].app[0].startTime = 0s
*.misc[0].app[0].stopTime = 300s
*.misc[0].app[0].destAddresses = "224.0.0.10"          # IP address of the multicast group
*.misc[0].app[0].destPort = 3000
*.misc[0].app[0].receiveBroadcast = true
*.misc[0].app[0].joinLocalMulticastGroups = true
*.misc[0].app[0].multicastInterface="wlanNic0"

*.pNode[*].numApps = 1
*.pNode[*].app[0].typename = "UdpDetourAppVadere"
*.pNode[*].app[0].localPort = 3000
*.pNode[*].app[0].startTime = 0s
*.pNode[*].app[0].stopTime = 300s
*.pNode[*].app[0].destAddresses = "224.0.0.10"          # IP address of the multicast group
*.pNode[*].app[0].destPort = 3000
*.pNode[*].app[0].receiveBroadcast = true
*.pNode[*].app[0].joinLocalMulticastGroups = true
*.pNode[*].app[0].multicastInterface="wlanNic0"
*.pNode[*].app[0].notifyMobilityProvider = true

*.*[*].app[0].messageLength = 3000B


################ PhysicalEnviroment #####################
*.physicalEnvironment.config = xmldoc("vadere/scenarios/simple_detour_100x177.env.xml")
*.physicalEnvironment.spaceMinX = -10m
*.physicalEnvironment.spaceMinY = -10m
*.physicalEnvironment.spaceMinZ = -10m
*.physicalEnvironment.spaceMaxX = 200m
*.physicalEnvironment.spaceMaxY = 150m
*.physicalEnvironment.spaceMaxZ = 100m

[Config final]
extends = vadereBasic, dimensional
**.vadereScenarioPath =  "vadere/scenarios/simple_detour_100x177_miat1.25.scenario"








