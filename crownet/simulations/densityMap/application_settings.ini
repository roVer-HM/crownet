#
# Default settings used by many simulations. Be carful when changing 
# values here because it my break other simulations. 
# 

# Usefull network level default settings.
########################################################################


[Config pedestrian_beacon_map_udp]
**.cellSize = 5.0m
*.pNode[*].numApps = 2
*.pNode[*].app[*].socket.typename = "UdpSocketManager"
## Beacon ##
*.pNode[*].app[0].typename = "BeaconApp"
*.pNode[*].app[0].app.typename = "BeaconDynamic"
*.pNode[*].app[0].app.startTime = uniform(0s,50ms)
### Beacon scheduling ###
*.pNode[*].app[0].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[0].scheduler.generationInterval = 100ms + uniform(0s, 50ms)

## Density Map ##
*.pNode[*].app[1].typename = "DensityMapApp"
*.pNode[*].app[1].app.typename = "DensityMapAppSimple"
*.pNode[*].app[1].app.startTime = 0s
*.pNode[*].app[1].app.mapCfg = crownet::MapCfgYmf{ \
	writeDensityLog: true, \
	mapTypeLog: "all", \
	cellAgeTTL: -1.0s, \
	idStreamType: "insertionOrder"}
### Density Map scheduling ###
# Schedule multiple packets in each interval
*.pNode[*].app[1].scheduler.typename = "IntervalScheduler"
*.pNode[*].app[1].scheduler.generationInterval = 4000ms + uniform(0s, 50ms)
*.pNode[*].app[1].scheduler.startOffset = 60ms + uniform(0s, 50ms)
*.pNode[*].app[1].scheduler.numberPackets  = -1
*.pNode[*].app[1].scheduler.amoutOfData  = 200MB
*.pNode[*].app[1].app.maxPduLength = 1400B

## Log ##
*.fileWriterRegister.typename = "FileWriterRegister"
*.fileWriterRegister.register = { \
	neighborhoodWriter: crownet::NeighborhoodEventWriter{filePath: "beacons.csv"} \
	}
*.gloablDensityMap.writeMapInterval = 1000ms

## Neighborhood Table ##
*.pNode[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.pNode[*].nTable.maxAge = 5s	# TTL



[Config misc_beacon_map_udp]
**.cellSize = 5.0m
*.misc[*].numApps = 2
*.misc[*].app[*].socket.typename = "UdpSocketManager"
## Beacon ##
*.misc[*].app[0].typename = "BeaconApp"
*.misc[*].app[0].app.typename = "BeaconDynamic"
*.misc[*].app[0].app.startTime = uniform(0s,50ms)
### Beacon scheduling ###
*.misc[*].app[0].scheduler.typename = "IntervalScheduler"
*.misc[*].app[0].scheduler.generationInterval = 100ms + uniform(0s, 50ms)

## Density Map ##
*.misc[*].app[1].typename = "DensityMapApp"
*.misc[*].app[1].app.typename = "DensityMapAppSimple"
*.misc[*].app[1].app.startTime = 0s
*.misc[*].app[1].app.mapCfg = crownet::MapCfgYmf{ \
	writeDensityLog: true, \
	mapTypeLog: "all", \
	cellAgeTTL: -1.0s, \
	idStreamType: "insertionOrder"}
### Density Map scheduling ###
# Schedule multiple packets in each interval
*.misc[*].app[1].scheduler.typename = "IntervalScheduler"
*.misc[*].app[1].scheduler.generationInterval = 4000ms + uniform(0s, 50ms)
*.misc[*].app[1].scheduler.startOffset = 60ms + uniform(0s, 50ms)
*.misc[*].app[1].scheduler.numberPackets  = -1
*.misc[*].app[1].scheduler.amoutOfData  = 200MB
*.misc[*].app[1].app.maxPduLength = 1400B

## Log ##
*.fileWriterRegister.typename = "FileWriterRegister"
*.fileWriterRegister.register = { \
	neighborhoodWriter: crownet::NeighborhoodEventWriter{filePath: "beacons.csv"} \
	}
*.gloablDensityMap.writeMapInterval = 1000ms

## Neighborhood Table ##
*.misc[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.misc[*].nTable.maxAge = 5s	# TTL

