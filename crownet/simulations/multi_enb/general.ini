[Config Defaults]

#============= Statistics ===========================
outputvectormanager-class="omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class="omnetpp::envir::SqliteOutputScalarManager"
experiment-label = ${datetime} # use ${experiment}
output-scalar-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.sca
output-vector-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.vec
cmdenv-output-file = ${resultdir}/${configname}_${experiment}/vars_${iterationvarsf}rep_${repetition}.out
seed-set = ${repetition}

**.scalar-recording = true
#**.statistic-recording = false
**.routingRecorder.enabled = false

*.server.**.vector-recording = false
*.*NB[*].sctp.**.vector-recording = false
*.*NB[*].**.vector-recording = true
*.*NB[*].cellularNic.mac.**.vector-recording = true
*.*NB[*].cellularNic.phy.**.vector-recording = true
*.*NB[*].pos*.result-recording-modes = +vector
*.*NB[*].pos*.vector-recording=true

*.*Node[*].app[*].**.vector-recording = true
*.*Node[*].app[*].packetMeter*.*.vector-recording = false
*.*Node[*].app[*].app.*DataRate.throughput.interval = 1s
*.*Node[*].nTable.**.vector-recording = true
*.*Node[*].cellularNic.phy.**.vector-recording = true
*.*Node[*].cellularNic.channelModel[*].**.result-recording-modes = +vector
*.*Node[*].cellularNic.channelModel[*].**.vector-recording = true
*.*Node[*].cellularNic.**.vector-recording = false
*.*Node[*].pos*.result-recording-modes = +vector
*.*Node[*].pos*.vector-recording=true

*.misc[*].app[*].packetMeter*.*.vector-recording = false
*.misc[*].app[*].app.*DataRate.throughput.interval = 1s
*.misc[*].nTable.**.vector-recording = true
*.misc[*].cellularNic.phy.**.vector-recording = true
*.misc[*].cellularNic.channelModel[*].**.result-recording-modes = +vector
*.misc[*].cellularNic.channelModel[*].**.vector-recording = true
*.misc[*].cellularNic.**.vector-recording = false
*.misc[*].pos*.result-recording-modes = +vector
*.misc[*].pos*.vector-recording=true

#**.vector-recording = true

#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m

#============= AMC module parameters ===============
**.ueTxPower = 26 # default 26
**.d2dTxPower = 26 # default 26
**.eNodeBTxPower = 46 # default 46


#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz
**.numComponentCarriers = 1
**.componentCarrier[0].carrierFrequency = 2600MHz

#**.numComponentCarriers = 2
#**.componentCarrier[0].carrierFrequency = 2600MHz
#**.componentCarrier[1].carrierFrequency = 2400MHz
**.numBands = 25	# componentCarrier


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel[*].shadowing = true
**.channelModel[*].scenario = "URBAN_MICROCELL" #"URBAN_MACROCELL"
**.channelModel[*].nodeb_height = 25
**.channelModel[*].ue_height = 1.5
**.channelModel[*].building_height = 20

**.channelModel[*].street_wide = 20
**.channelModel[*].tolerateMaxDistViolation = true
**.channelModel[*].correlation_distance = 25

**.channelModel[*].antennaGainUe = 0
**.channelModel[*].antennGainEnB = 0


**.channelModel[*].dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel[*].fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel[*].fading = true        # Enable/disable fading
#**.channelModel[*].fading = false        # Enable/disable fading
**.channelModel[*].fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel[*].fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel[*].delay_rms = 363e-9

**.channelModel[*].extCell_interference = true # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel[*].downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel[*].uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel[*].d2d_interference = true      # if true, enables the interference computation for D2D connections

#*.misc[*].cellularNic.numCarriers = 2
#*.misc[*].cellularNic.channelModel[0].componentCarrierIndex = 0
#*.misc[*].cellularNic.channelModel[1].componentCarrierIndex = 1
#
#*.eNB[*].cellularNic.numCarriers=1
#*.eNB[0].cellularNic.channelModel[0].componentCarrierIndex = 0
#*.eNB[1].cellularNic.channelModel[0].componentCarrierIndex = 1

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 300000B  	            # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)

# global parameters
**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")


[Config Defaults_4G]
extends = Defaults
*.useNR = false
# (person and vehicle aka pNode and vNode)
*.*Node[*].macCellId = 1
*.*Node[*].masterId = 1
*.*Node[*].nicType = "LteNicUeD2D"
*.*Node[*].radioDriver.dispatchInterfaceName = "cellular"
*.*Node[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.*Node[*].cellularNic.address = "auto"

# Misc
*.misc[*].macCellId = 1
*.misc[*].masterId = 1
*.misc[*].nicType = "LteNicUeD2D"
*.misc[*].radioDriver.dispatchInterfaceName = "cellular"
*.misc[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.misc[*].cellularNic.address = "auto"

[Config Defaults_5G]
extends = Defaults
*.useNR = true
# (person and vehicle aka pNode and vNode)
*.*Node[*].macCellId = 1
*.*Node[*].masterId = 1
*.*Node[*].nrMasterId = 1
*.*Node[*].nicType = "NRNicUe"
*.*Node[*].radioDriver.dispatchInterfaceName = "cellular"
*.*Node[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.*Node[*].cellularNic.address = "auto"

# Misc
*.misc[*].macCellId = 1
*.misc[*].masterId = 1
*.misc[*].nrMasterId = 1
*.misc[*].nicType = "NRNicUe"
*.misc[*].radioDriver.dispatchInterfaceName = "cellular"
*.misc[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.misc[*].cellularNic.address = "auto"




[Config reducedPowerSettings]

#============= AMC module parameters ===============
**.ueTxPower = 20 #20
**.d2dTxPower = 10
**.eNodeBTxPower = 20  #DBm
**.channelControl.carrierFrequency = 2603e+6Hz
**.componentCarrier[0].carrierFrequency = 2604MHz
**.numBands = 25


[Config World_dcd]

*.hasCellular = true
*.hasStoryboard = false
*.hasWlan = false

*.globalDensityMap.typename = "GlobalDensityMap"
*.flowController.typename = "" 

# avg = (1-alpha)*avg + alpha*new_val (rtpc)
**.packetMeter.alpha = 0.0625

[Config Entropy_Map]

*.globalDensityMap.typename = "GlobalEntropyMap"
*.globalDensityMap.entropyInterval = 1s
#*.globalDensityMap.entropyProvider = crownet::UniformEntropy{ 
#		minValue: 1.0, maxValue: 30.0, 
#		cellSelectionPropability: 0.70 }
*.globalDensityMap.entropyProvider = crownet::RndOffsetPolynomialEntropy{ coefficients : [0.0, 1.0,], cellSelectionPropability : 1.0, minValue: 10.0, maxValue: 30.0}


[Config D2D_General]
extends = World_dcd
# Default D2D config
# World contains nodes in 3 different vectors
# pNode (pedestrians), vNode(vehicles) 
# and misc(stationary nodes not controlled by any mobility provider
# To allow communication between all the need to be in the same 
# multicast group
## Enrolled multicast groups (TraCI) for person and vehicle ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
# for vNode[*] and pNode[*]
*.*Node[*].ipv4.configurator.interfaces = "cellular" #"wlan"
*.*Node[*].ipv4.configurator.addressBase = "20.0.0.0"
*.*Node[*].ipv4.configurator.netmask = "255.0.0.0"
*.*Node[*].cellularNic.processingDelayIn = 5518us
*.*Node[*].cellularNic.processingDelayOut = 1134us
*.*Node[*].cellularNic.phy.d2dEnforceEnbBoundOnSideLink = true

# todo processingDelayIN/OUT in 5G?
**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
*.eNB[*].cellularNic.processingDelayOut = 1134us

# Misc (only set interface name. Rest is done with ip4Config.xml)
*.misc[*].ipv4.configurator.interfaces = "cellular" 
*.misc[*].cellularNic.processingDelayIn = 5518us
*.misc[*].cellularNic.processingDelayOut = 1134us
*.misc[*].cellularNic.phy.d2dEnforceEnbBoundOnSideLink = true


### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7
