
[Config _default]
#============= Mobility parameters ==================
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 30m

#============= AMC module parameters ===============
**.ueTxPower = 20
**.eNodeBTxPower = 20
**.numRbDl = 20
**.numRbUl = 20
**.numBands = 20

#============= Channel control parameters ===========
**.channelControl.pMax = 1W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2600e+6Hz


#============= Channel model parameters =============
# for a complete list of all parameters:
#   refer to LteChannelModels.ned
**.channelModel[0].shadowing = true
**.channelModel[0].scenario = "URBAN_MICROCELL"
**.channelModel[0].nodeb_height = 25
**.channelModel[0].ue_height = 1.5
**.channelModel[0].building_height = 20

**.channelModel[0].street_wide = 20
**.channelModel[0].antennaGainUe = 0
**.channelModel[0].antennGainEnB = 0

**.channelModel[0].correlation_distance = 25
**.channelModel[0].dynamic_los = true   # If true enable the possibility to switch dinamically the LOS/NLOS pathloss computation
**.channelModel[0].fixed_los = false      # If dynamic-los is false this parameter, if true, compute LOS pathloss otherwise compute NLOS pathloss
**.channelModel[0].fading = false        # Enable/disable fading
**.channelModel[0].fading_type = "JAKES" # Fading type (JAKES or RAYGHLEY) if fading is enabled
**.channelModel[0].fading_paths = 6      # If jakes fading this parameter specify the number of path (tap channel)
**.channelModel[0].delay_rms = 363e-9

**.channelModel[0].extCell_interference = false # if true, enables the inter-cell interference computation for DL connections from external cells
**.channelModel[0].downlink_interference = true # if true, enables the inter-cell interference computation for DL connections
**.channelModel[0].uplink_interference = true   # if true, enables the interference computation for UL connections
**.channelModel[0].d2d_interference = true      # if true, enables the interference computation for D2D connections

#============= Protocol stack parameters  ===========
#(as in OpenAirInterface Configuration)
**.rlc.um.queueSize = 5000000B              # OpenAirInterface queue limit for RLC_MODE_UM  (Commit f58ad3c39f04ca7305202749a7dad2b25ef6b942 file rlc.c  method rlc_data_req() line 478)
**.mac.queueSize = 10000B					# reduce MAC queue size - OpenAirInterface does not queue packets in mac layer
**.pdcpRrc.backgroundRlc = 1                # default RLC type (0: TM, 1: UM, 2: AM)


#=============  defaults  ===========
# eNodeB
*.numEnb=1
*.eNB[0].mobility.initFromDisplayString = false
*.eNB[0].mobility.initialX = 20m
*.eNB[0].mobility.initialY = 20m
*.eNB[*].nicType = "LteNicEnbD2D"
*.eNB[*].cellularNic.mac.amcMode = "D2D"

# (person and vehicle)
*.*Node[*].macCellId = 1
*.*Node[*].masterId = 1
*.*Node[*].nicType = "LteNicUeD2D"
*.*Node[*].radioDriver.dispatchInterfaceName = "cellular"
*.*Node[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.*Node[*].cellularNic.address = "auto"

# Misc
*.misc[*].macCellId = 1
*.misc[*].masterId = 1
*.misc[*].nicType = "LteNicUeD2D"
*.misc[*].radioDriver.dispatchInterfaceName = "cellular"
*.misc[*].cellularNic.mac.amcMode = "D2D" #"D2D"
*.misc[*].cellularNic.address = "auto"

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")

# PhysicalEnviroment (*.physicalEnvironment.config set by other config)
*.physicalEnvironment.spaceMinX = -100m
*.physicalEnvironment.spaceMinY = -100m
*.physicalEnvironment.spaceMinZ = -100m
*.physicalEnvironment.spaceMaxX = 600m
*.physicalEnvironment.spaceMaxY = 600m
*.physicalEnvironment.spaceMaxZ = 600m

**.coordConverterModule = "coordConverter"
**.identiyRegistryModule = "identiyRegistry"
*.configurator.config = xmldoc("ip4Config.xml")

[Config D2D_General]
# Default D2D config
# World contains nodes in 3 different vectors
# pNode (pedestrians), vNode(vehicles) 
# and misc(stationary nodes not controlled by any mobility provider
# To allow communication between all the need to be in the same 
# multicast group
## Enrolled multicast groups (TraCI) for person and vehicle ##
#  Must be set in the HostAutoConfigurator (instead of ip4Config.xml), seperated by a single space character
# for vNode[*] and pNode[*]
*.*Node[*].ipv4.configurator.interfaces = "cellular" #"wlan"
*.*Node[*].ipv4.configurator.addressBase = "20.0.0.0"
*.*Node[*].ipv4.configurator.netmask = "255.0.0.0"
*.*Node[*].cellularNic.processingDelayIn = 5518us
*.*Node[*].cellularNic.processingDelayOut = 1134us


**.rlc.um.mapAllLcidsToSingleBearer = true  # OpenAirInterface uses a single bearer for all data
*.eNB[*].cellularNic.processingDelayIn = 1134us    # additional processing delays
*.eNB[*].cellularNic.processingDelayOut = 1134us

# Misc (only set interface name. Rest is done with ip4Config.xml)
*.misc[*].ipv4.configurator.interfaces = "cellular" 
*.misc[*].cellularNic.processingDelayIn = 5518us
*.misc[*].cellularNic.processingDelayOut = 1134us

### Select CQI for D2D transmissions ###
# One-to-Many communications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and
# select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7


[Config stationary]
*.misc[*].middleware.typename = ""
*.misc[*].mobility.typename = "StationaryMobility"
*.misc[*].mobility.initFromDisplayString = false

[Config stationary_n1]
extends = stationary
*.numMisc = 1
*.misc[*].typename = "crownet.nodes.AidPedestrian"

*.misc[0].mobility.initialX = 5m
*.misc[0].mobility.initialY = 2m
*.misc[0].mobility.initialZ = 1.3m


[Config stationary_n2]
extends = stationary
*.numMisc = 2
*.misc[*].typename = "crownet.nodes.AidPedestrian"

*.misc[0].mobility.initialX = 5m
*.misc[0].mobility.initialY = 2m
*.misc[0].mobility.initialZ = 1.3m

*.misc[1].mobility.initialX = 10m
*.misc[1].mobility.initialY = 7m
*.misc[1].mobility.initialZ = 1.3m


[Config stationary_n3]
extends = stationary
*.numMisc = 3
*.misc[*].typename = "crownet.nodes.AidPedestrian"

*.misc[0].mobility.initialX = 5m
*.misc[0].mobility.initialY = 2m

*.misc[1].mobility.initialX = 10m
*.misc[1].mobility.initialY = 7m

*.misc[2].mobility.initialX = 3m
*.misc[2].mobility.initialY = 15m

[Config stationary_n5]
extends = stationary
*.numMisc = 5
*.misc[*].typename = "crownet.nodes.AidPedestrian"
*.misc[0].mobility.initialX = 1.2m
*.misc[0].mobility.initialY = 1.2m

*.misc[1].mobility.initialX = 5.5m
*.misc[1].mobility.initialY = 2m

*.misc[2].mobility.initialX = 28m
*.misc[2].mobility.initialY = 28m

*.misc[3].mobility.initialX = 29m
*.misc[3].mobility.initialY = 29m

*.misc[4].mobility.initialX = 29m
*.misc[4].mobility.initialY = 28m


[Config DcDMap]
*.misc[*].numApps = 2
*.misc[*].app[0].socket.typename = "UdpSocketManager"
# Beacon Application
*.misc[*].app[0].typename = "BeaconApp"
*.misc[*].app[0].app.typename = "BeaconDynamic"
*.misc[*].app[0].app.startTime = 0s
*.misc[*].app[0].scheduler.typename = "IntervalScheduler"
*.misc[*].app[0].scheduler.generationInterval = 50ms
# DcDMap Application
*.misc[*].app[1].typename = "DensityMapApp"
*.misc[*].app[1].app.typename = "DensityMapAppSimple"
*.misc[*].app[1].app.startTime = 0s
*.misc[*].app[1].app.localMapUpdateInterval = 1s
*.misc[*].app[1].app.mapCfg = crownet::MapCfg{ \
            writeDensityLog: true, \
            mapType: "ymf", \
            mapTypeLog: "ymf", \
            idStreamType: "insertionOrder"}
*.misc[*].app[1].scheduler.typename = "IntervalScheduler"
*.misc[*].app[1].scheduler.generationInterval = 100ms
# NeighborhoodTable
*.misc[*].nTable.typename = "crownet.neighbourhood.NeighborhoodTable"
*.misc[*].nTable.maxAge = 7s
